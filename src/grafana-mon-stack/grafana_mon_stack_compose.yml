---
services:

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    labels:
      - namespace=monitor
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: '1024M'
        reservations:
          memory: '256M'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    labels:
      - namespace=monitor
    restart: unless-stopped
    ports:
      - '8080:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: '1024M'
        reservations:
          memory: '256M'

  prometheus:
    depends_on:
      - node_exporter
      - cadvisor
    image: prom/prometheus
    container_name: prometheus
    labels:
      - namespace=monitor
    restart: unless-stopped
    ports:
      - '9090:9090'
    volumes:
      - prometheus_data:/prometheus
      - /var/lib/docker/volumes/configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: '1024M'
        reservations:
          memory: '256M'

  grafana:
    depends_on:
      - prometheus
    image: grafana/grafana
    container_name: grafana
    labels:
      - namespace=monitor
    restart: unless-stopped
    networks:
      - monitoring
    environment:
      - GF_SECURITY_ADMIN_USER=${grafana_admin}
      - GF_SECURITY_ADMIN_PASSWORD=${grafana_password}
      - GF_INSTALL_PLUGINS=
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana

networks:
  monitoring:

volumes:
  grafana_data:
  prometheus_data:
